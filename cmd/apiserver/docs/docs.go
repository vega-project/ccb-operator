// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "openapi": "3.0.0",
    "info": {
      "version": "1.0.0",
      "title": "Vega project API",
      "description": "An API for Vega project"
    },
    "servers": [
      {
        "url": "https://apiserver-vega.apps.vega-sci.vegaproject.io"
      },
      {
        "url": "https://127.0.0.1:8080"
      }
    ],
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer"
        }
      },
      "schemas": {
        "ObjectMeta": {
          "title": "ObjectMeta",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            }
          }
        },
        "Bulks": {
          "properties": {
            "Metadata": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ObjectMeta"
                },
                {
                  "type": "object"
                }
              ]
            },
            "RootFoler": {
              "type": "string"
            },
            "WorkerPool": {
              "type": "string"
            },
            "InputFiles": {
              "type": "object",
              "description": "The metadata of the calculation bulk"
            },
            "Calculations": {
              "type": "object",
              "description": "The metadata of the calculation bulk"
            },
            "Status": {
              "type": "object",
              "description": "The metadata of the calculation bulk"
            }
          }
        },
        "WorkerPool": {
          "title": "WorkerPool",
          "type": "object"
        },
        "Calculation": {
          "title": "Calculation",
          "type": "object"
        }
      }
    },
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "paths": {
      "/calculations": {
        "get": {
          "tags": [
            "Calculations"
          ],
          "description": "Returns a list of calculations",
          "summary": "Returns a list of calculations",
          "responses": {
            "200": {
              "description": "Successfully returned a list of calculations",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Calculation"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/calculation/{calculationId}": {
        "get": {
          "tags": [
            "Calculations"
          ],
          "description": "Return a calculation by a name",
          "responses": {
            "200": {
              "description": "Successfully returned a calculation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Calculation"
                  }
                }
              }
            },
            "404": {
              "description": "Could not find the calculation"
            }
          },
          "parameters": [
            {
              "name": "calculationId",
              "in": "path",
              "description": "A calculation name",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/Calculation"
              }
            }
          ]
        }
      },
      "/bulks": {
        "get": {
          "tags": [
            "Calculation Bulks"
          ],
          "description": "Returns a list of calculation bulks",
          "summary": "Returns a list of calculation bulks",
          "responses": {
            "200": {
              "description": "Successfully returned a list of calculation bulks",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Bulks"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request"
            }
          }
        }
      },
      "/bulk/{bulkId}": {
        "get": {
          "tags": [
            "Calculation Bulks"
          ],
          "description": "Return a calculation bulk by a name",
          "responses": {
            "200": {
              "description": "Successfully returned a calculation bulk"
            },
            "404": {
              "description": "Could not find the calculation bulk"
            }
          },
          "parameters": [
            {
              "name": "bulkId",
              "in": "path",
              "description": "A calculation bulk name",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/Bulks"
              }
            }
          ]
        }
      },
      "/bulk/create": {
        "post": {
          "tags": [
            "Calculation Bulks"
          ],
          "summary": "Create a new calculation bulk",
          "description": "Create a new calculation bulk",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bulks"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully created the calculation bulk"
            },
            "400": {
              "description": "Invalid request"
            }
          }
        }
      },
      "/bulks/delete/{bulkId}": {
        "delete": {
          "tags": [
            "Calculation Bulks"
          ],
          "summary": "Delete a calculation bulk",
          "description": "Delete a calculation bulk",
          "parameters": [
            {
              "name": "bulkId",
              "in": "path",
              "description": "A calculation bulk name",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/Bulks"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully deleted the calculation bulk"
            },
            "400": {
              "description": "Invalid request"
            }
          }
        }
      },
      "/workerpools": {
        "get": {
          "tags": [
            "WorkerPools"
          ],
          "description": "Returns a list of workerpools",
          "summary": "Returns a list of workerpools",
          "responses": {
            "200": {
              "description": "Successfully returned a list of workerpools",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkerPool"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/workerpool/{workerPoolId}": {
        "get": {
          "tags": [
            "WorkerPools"
          ],
          "description": "Return a workerpool by a name",
          "responses": {
            "200": {
              "description": "Successfully returned a workerpool"
            },
            "404": {
              "description": "Could not find the workerpool"
            }
          },
          "parameters": [
            {
              "name": "workerPoolId",
              "in": "path",
              "description": "A workerpool name",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/WorkerPool"
              }
            }
          ]
        }
      },
      "/workerpool/create": {
        "post": {
          "tags": [
            "WorkerPools"
          ],
          "summary": "Create a new workerpool",
          "description": "Create a new workerpool",
          "parameters": [
            {
              "in": "query",
              "name": "name",
              "schema": {
                "type": "string"
              },
              "description": "A workerpool name",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully created the workerpool"
            },
            "400": {
              "description": "Invalid request"
            }
          }
        }
      },
      "/workerpools/delete/{workerPoolId}": {
        "delete": {
          "tags": [
            "WorkerPools"
          ],
          "summary": "Delete a workerpool",
          "description": "Delete a workerpool",
          "parameters": [
            {
              "name": "workerPoolId",
              "in": "path",
              "description": "A workerpool name",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/WorkerPool"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully deleted the workerpool"
            },
            "400": {
              "description": "Invalid request"
            }
          }
        }
      }
    }
  }`

var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
